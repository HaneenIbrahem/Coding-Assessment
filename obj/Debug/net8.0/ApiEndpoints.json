[
  {
    "ContainingType": "AssessmentsController",
    "Method": "GetAssessmentById",
    "RelativePath": "api/assessments/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssessmentsController",
    "Method": "GetAllAssessments",
    "RelativePath": "api/assessments/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssessmentsController",
    "Method": "CreateAssessment",
    "RelativePath": "api/assessments/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "WebApplication3.DTOs.CreateAssessmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication2.Controllers.QuestionsController",
    "Method": "AddQuestion",
    "RelativePath": "api/questions/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication2.Controllers.AddQuestionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication2.Controllers.QuestionsController",
    "Method": "DeleteQuestion",
    "RelativePath": "api/questions/delete",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication2.Controllers.DeleteQuestionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication2.Controllers.QuestionsController",
    "Method": "PreviewQuestionsByCategory",
    "RelativePath": "api/questions/preview-by-category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication2.Controllers.CategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication2.Controllers.QuestionsController",
    "Method": "PreviewQuestionById",
    "RelativePath": "api/questions/preview-by-id",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication2.Controllers.QuestionIdRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication2.Controllers.QuestionsController",
    "Method": "UpdateQuestion",
    "RelativePath": "api/questions/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WebApplication2.Controllers.UpdateQuestionRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication4.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[WebApplication4.WeatherForecast, WebApplication4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]